{
  "Uuid": "186900fd-c7b8-472c-aa0d-b818f87f1746",
  "IsCustomNode": false,
  "Description": "Generate a Pixelated Tower inspired by the MahanNakhon tower by Buro Ole Scheeren Architects, a mixed-use high-rise in Bangkok Thailand. Leverages the connected client nodes to create native Forma Buildings.",
  "Name": "PixelTower_NativeFormaElements",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "883472d5f40946b8ad2990a26735dede",
      "Name": "Cubes Removal Factor",
      "Type": "number",
      "Type2": "number",
      "Value": "3",
      "MaximumValue": 4.0,
      "MinimumValue": 0.0,
      "StepValue": 0.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    },
    {
      "Id": "81150b405c8f431498be5a1c272f42b3",
      "Name": "Cube Module Dimensions",
      "Type": "number",
      "Type2": "number",
      "Value": "3",
      "MaximumValue": 20.0,
      "MinimumValue": 3.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    },
    {
      "Id": "97a2b63bdf324f61be812c771c84ce44",
      "Name": "Overall Tower Height",
      "Type": "number",
      "Type2": "number",
      "Value": "130",
      "MaximumValue": 1000.0,
      "MinimumValue": 100.0,
      "StepValue": 10.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    },
    {
      "Id": "419b3ae29bfc4563a0c226fb3326ec88",
      "Name": "Cube Module Spread",
      "Type": "number",
      "Type2": "number",
      "Value": "7",
      "MaximumValue": 20.0,
      "MinimumValue": 5.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    },
    {
      "Id": "916b076092eb4c79b254cd0d611ae078",
      "Name": "Commercial levels count",
      "Type": "number",
      "Type2": "number",
      "Value": "5",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    },
    {
      "Id": "4a546baed75c41a2990197c804d68e5e",
      "Name": "GetProject",
      "Type": "string",
      "Type2": "string",
      "Value": "{\"projectId\":\"pro_0xt8n1odg1\",\"region\":\"US\"}",
      "Description": "Get the current Project in the Forma  "
    }
  ],
  "Outputs": [
    {
      "Id": "4efbc8b7a68247e4a2ec42b696fab30f",
      "Name": "SendElementsToForma",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Send the given elements To Forma Player Extension"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "46f24965b3ba4ceead9b4962fe8e2023",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5033706d60104e50853ede4ede9170a0",
          "Name": "coordinateSystem",
          "Description": "Parent coordinate system (center of cuboid)\n\nCoordinateSystem\nDefault value : Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "645e17537e35452aa4d68afe927abe90",
          "Name": "width",
          "Description": "Width of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f64104b4eba457fa480d11bbfb41f1d",
          "Name": "length",
          "Description": "Length of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e14c0580d54497c90fa6a760a3c1bd0",
          "Name": "height",
          "Description": "Height of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a564429ab1b94bb6b4c4c4ea4383ab55",
          "Name": "Cuboid",
          "Description": "Cuboid created from lengths",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Cuboid.ByLengths@Autodesk.DesignScript.Geometry.CoordinateSystem,double,double,double",
      "Replication": "Auto",
      "Description": "Create a Cuboid centered at WCS origin, with width, length, and height.\n\nCuboid.ByLengths (coordinateSystem: CoordinateSystem = Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0), width: double = 1, length: double = 1, height: double = 1): Cuboid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c28120dcd5e642b2842132857f794fcd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8a2f62a6650a471eaaa12573714f94ae",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84434eee10dc40a28dbf2cc37878c816",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "395158d9c68e4015be424d4b075d1850",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f870dd9d232d4e5b9dddb76fae38dc9b",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin@double,double,double",
      "Replication": "CrossProduct",
      "Description": "Create a CoordinateSystem with origin at X, Y, and Z locations, with X and Y Axes set as WCS X and Y Axes.\n\nCoordinateSystem.ByOrigin (x: double = 0, y: double = 0, z: double = 0): CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b420abf45fb249c2865e62d2fe4c4a73",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "821835a8b9aa4362958b225ddda052dc",
          "Name": "cubeDimensions",
          "Description": "cubeDimensions",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a195d1ec44714c19807110b380743122",
          "Name": "cubeSpread",
          "Description": "cubeSpread",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "248e6a97082f489abe3354d2be7b8a19",
          "Name": "towerHeight",
          "Description": "towerHeight",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a466c0a23244dfd8325eebeed902f5b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a0be7b8f8c74c4581ad5d88e02fe6ce",
          "Name": "",
          "Description": "towerSize",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c10b4c1ab0b4446a91085868c77a2fdd",
          "Name": "",
          "Description": "horizRange",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0047680356604e03acae3c5c5ccca8ec",
          "Name": "",
          "Description": "heightRange",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "//Setting overall dimensions of our pixelated Cuboid\ncubeDimensions;\n\n//Setting overall XY plane size of pixelated Tower\ntowerSize = cubeDimensions * cubeSpread;\n\n//Create XY range around 0,0,0 point\nhorizRange = -(towerSize/2)..(towerSize/2)..cubeDimensions;\n\n//Create height range of pixelated Tower\nheightRange = 0..towerHeight..cubeDimensions;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "10297b15fbe543219cd27d858eb31183",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8528c01552c94b4f99ce2092493e4463",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "270ece4cb08a41c78a37f01fd19e149b",
          "Name": "fromCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6da5d7f49070429c95bcd21c82747825",
          "Name": "contextCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f736f2bee8c84c699bfc2fde11cae7e2",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Transform@Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem",
      "Replication": "Auto",
      "Description": "Transforms this geometry from source CoordinateSystem to a new context CoordinateSystem.\n\nGeometry.Transform (fromCoordinateSystem: CoordinateSystem, contextCoordinateSystem: CoordinateSystem): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "97827c6de908404092317c4366ed8d27",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8172c5ff8cc4f5d9456d0892e8491cf",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.Identity",
      "Replication": "Auto",
      "Description": "Creates a CoordinateSystem as the World Coordinate System: origin at 0, 0, 0; x axis at 1, 0, 0; y axis at 0, 1, 0; z axis at 0, 0, 1\n\nCoordinateSystem.Identity ( ): CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9959fd7308cc44fa95b9f543c26b0a74",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "784842b0a8e94c4ca63bb06a9ced3934",
          "Name": "towerSize",
          "Description": "towerSize",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "176a14043447494eb6ebb1e923c509b7",
          "Name": "cubeDimensions",
          "Description": "cubeDimensions",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6eee22b4a215441dbd12637d8e811cf0",
          "Name": "towerHeight",
          "Description": "towerHeight",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43bb7038690943409b7279fc6bb0f644",
          "Name": "",
          "Description": "pointDistance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48d4864e97494c88b32aca4424e5a3b2",
          "Name": "",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d60c4a01f1444127b31ade69e3fed60b",
          "Name": "",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5ccb00447414f33b2575d8fa488646f",
          "Name": "",
          "Description": "z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "//Setting an overall starting value\npointDistance = (towerSize / 2) + (cubeDimensions * 2);\n\n//Setting X value locations for our Points to wrap around tower\nx = [-pointDistance, pointDistance, pointDistance,\n\t-pointDistance, -pointDistance, pointDistance];\n\n//Setting Y value locations for our Points to wrap around tower\ny = [-pointDistance, -pointDistance, pointDistance,\n\tpointDistance, -pointDistance, -pointDistance];\n\n//Setting Z value locations for our Points to wrap around tower\nz = [0, towerHeight * 0.25, towerHeight * 0.5,\n\ttowerHeight * 0.75, towerHeight, towerHeight * 1.25];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7deae453a9ac4381b2c06ca6842221f4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c9267c080ce34e25863128fce24b2787",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5f002d0c8e54eaa8ac3614d6ccb37f4",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ab8cd41d8ba415e9a21be43348948c4",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1aa1d3820f66455b9d406ae175ba4efe",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "49aa0f29bf3f452f90f364aa93e7287e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ed5af43ee53d486fb5444d49c9ea5bfa",
          "Name": "points",
          "Description": "Points for nurbs curve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec55c1a0fa86436db4205f9aa4b1be9b",
          "Name": "degree",
          "Description": "int\nDefault value : 3",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1371bf446914cbfa5faa351f6b7724f",
          "Name": "NurbsCurve",
          "Description": "Nurbscurve created from points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPoints@Autodesk.DesignScript.Geometry.Point[],int",
      "Replication": "Auto",
      "Description": "Create a BSplineCurve by using explicit control points. NOTE 1: BSplineCurves with deg=1 have G1 discontinuities, which cause problems for extrusion, sweep, and other operations. They should be avoided. Use a PolyCurve instead. NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.\n\nNurbsCurve.ByControlPoints (points: Point[], degree: int = 3): NurbsCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dfe7304fd54a47c7b70e0dee2d0a66e4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bb313ca27ebb43299921df40b69dbafe",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a23c5273c004fd1a5764ff88757bcfc",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c4ebbe3dc2d4fc89317d38a05256198",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "27254c48adff4359addc240aa105752f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f437d674aa1c4b958bf6d8c31d8ddbae",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd3af30987cd484580dbaeec6e5e376f",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95f42c1b3a4a4d97a465ea002358fed1",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ed9ba9d22ab14d2ba6333e92821ba78a",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "3599c82011cf4756ad0bcff62588f20b",
          "Name": "cubeDimensions",
          "Description": "cubeDimensions",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f1d2c1347e74542bf84acd47527cd68",
          "Name": "cubeRemovalFactor",
          "Description": "cubeRemovalFactor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eacdff3daebc451fbbb83fef462db780",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "//Calculating distance for cube removal\ncubeDimensions * cubeRemovalFactor;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 4,
      "MinimumValue": 0,
      "StepValue": 0,
      "Id": "883472d5f40946b8ad2990a26735dede",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6b78b3a09d394dd4bc72a2909d47f81c",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 3
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c27b64af2e974c4e9d39b144667a6ad3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f36413d288ca4c7298160f2d93f0bf84",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e75bec55a35497c96d17a3ec90a3bbb",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c617447e76b4637b925223fbf2d9eae",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fde6604f5ce4986be8d212e081842ae",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 20,
      "MinimumValue": 3,
      "StepValue": 1,
      "Id": "81150b405c8f431498be5a1c272f42b3",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1e3068876a94a1f812455d037e1609d",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 3
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 1000,
      "MinimumValue": 100,
      "StepValue": 10,
      "Id": "97a2b63bdf324f61be812c771c84ce44",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0518672c340c48e0a0263b15ab163b8f",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 130
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 20,
      "MinimumValue": 5,
      "StepValue": 1,
      "Id": "419b3ae29bfc4563a0c226fb3326ec88",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c150d32b412b4d729b75b47e0c906e78",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 7
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "42ed36b4ba274dadb435cf88eae9624b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "86eb11221af64055b2599c46c482c8e4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20d2d1eb10424499b063f6b2990c247f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9266026023645c3b281cc7828579fa8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "48c8ea9790384d69b7393d67d63f9bdb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c225fe26f9734c3298d6a340fdfd2544",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52001b6127041b68b5e1bda328d1a0f",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "78b63f2aa02e4dc9b99464e0e27996b1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7f94e08c28e447688db3b595f9ad8363",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a25f4296b8d43ce8d49b08e887664f3",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a91842180fd49cc8377034570591a5a",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a941a33270543beaf73a73ce398c03e",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "58298eb5ac464f7fb1374abd6d88eb29",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "70398e634e9f4a96a0b6f4c21835232e",
          "Name": "geom",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "199f5540b1c74c158edea6fbc33c83d0",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry@Autodesk.DesignScript.Geometry.Geometry[]",
      "Replication": "Auto",
      "Description": "Create an axis-aligned BoundingBox around input Geometry.\n\nBoundingBox.ByGeometry (geom: Geometry[]): BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aab3d665bd7b42f0b46f017a8be831e1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d1d47d64ddf34d7084fa40fd13690406",
          "Name": "boundingBox",
          "Description": "Autodesk.DesignScript.Geometry.BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dea4377a5eeb45f6b5661c5e74e83b37",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.MinPoint",
      "Replication": "Auto",
      "Description": "The minimum point\n\nBoundingBox.MinPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b1b8c5916e5f4d0da763ff79948f7507",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ef445eeceeb4cc9a1fd5eb9822f4753",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8f7ca1340ed4a8eb6466b34bb649b56",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "01554d8115d4442db80acc9fb1fc4065",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "856229eca4504c85aa82ad399a49bc5b",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fc3d144ca8e4bbdb6711a762dd63db8",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "33247cb7e2cb4898b6a51c0462335908",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "73f97e97509b4e76ab70f18efa8b7c4a",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7ea1d1017234303b60bc4318fec0e27",
          "Name": "u",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3685d77f10384b5c8c0844f06caaf740",
          "Name": "v",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8264ddf445541148b83684f423eed4c",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PointAtParameter@double,double",
      "Replication": "Auto",
      "Description": "Return the Point at specified U and V parameters.\n\nSurface.PointAtParameter (u: double = 0, v: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f5dfc840c4714b8598464ca4ae356600",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b43f6f56c1c44a7bf3474426fc67c4d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0.5;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "eb06e4762fa34afbb22dcfda8d767cf1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "70152bef003547a5a3745367502f2eab",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe667b3727f845378c4df6c7d5da5eb2",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "756babd85cbe43288112ff34c6b0fe49",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6e3c6c0259f04b669ab00b964c87bcdd",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fab3c11ba1f54cefbf7ba1614a032fd0",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Replication": "Auto",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0632dcfabdc24cc1ade5b203936d7c99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a5a75c52a6e8492e8abbae85859ad144",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f551a2efb2743cb823c0fc5fb88b6f2",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43ffa74e4916442a9689c189fcdb1eda",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4aeec1f92bac48d19e4643a777c9be4c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "efa44e6d41594f7b807eca75717cb0a7",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f07f400376c64eb3ab0ed8460a9453ff",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b25c59544d2847838533745bc9412995",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8647dddca53a45a9aa7867e052c8b88c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ed0ab9e63834430db66fb8971dae9e4d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bd102bc8653747698d6e89297e17b32d",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d67974fed0cd468f99eba90af27e59b0",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a850acc5007946d5b5177c08b44915f3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4d89741c553946f4ba64930572d903ac",
          "Name": "closedCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7ae99e37cc4497cb15f11d24050ce94",
          "Name": "functionId",
          "Description": "string\nDefault value : \"residential\" (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "957cf03ab2cc4cb8996f3026021c67ba",
          "Name": "areaType",
          "Description": "string\nDefault value : \"LIVING_UNIT\" (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7865c73d4504e5fa600ca8c92602c73",
          "Name": "GFAUnit",
          "Description": "GFAUnit",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Representations.GFAUnits.ByCurveAndElevation@Autodesk.DesignScript.Geometry.PolyCurve,string,string",
      "Replication": "Auto",
      "Description": "Create a GFAUnit from a closed curve. Set the functionId and areaType of the unit.\n\nGFAUnits.ByCurveAndElevation (closedCurve: PolyCurve, functionId: string = \"residential\", areaType: string = \"LIVING_UNIT\"): GFAUnit"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ecbf2d4abaf946998d33ae8cf35d6e7c",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "14a98754ae734a6e94257c6935e32569",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "null;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b9ac7605795744958f4f72fd6e3123e2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6bdceecf6979412fb2662d737ed0cf43",
          "Name": "project",
          "Description": "Project",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a5a1f97737744b69caadf07be1301c9",
          "Name": "meshOrSolid",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6d09c7dba894837926ce48a8f0c45b7",
          "Name": "VolumeMesh",
          "Description": "VolumeMesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Representations.VolumeMesh.ByMeshOrSolid@Forma.Project.Project,var",
      "Replication": "Auto",
      "Description": "Create a VolumeMesh representation from a mesh or solid\n\nVolumeMesh.ByMeshOrSolid (project: Project, meshOrSolid: var): VolumeMesh"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4767c6cf7953443bafe0a61c5ae5fb75",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a699aa6d52b64c6aa4be584c703de0e2",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fadaa2d39d154ed4ad26379e6db8ffd9",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "539cae31378a4b70b7d85aafb1318680",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "82dda90f9d6e42cab4e74f5132a4581a",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2f596461e75467f9a2e585e0188ec40",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3aad941fcfdf453aa0de97f063091c07",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d8a1b08731941c9ac191194bbb63c16",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "288deb98d3fb4f77aebff08e14ec6cea",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"residential\";\n\"commercial\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0cc0df3d005a4186bf99d021a29ffc19",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1c3b868fea804fc5aabbb875e3bc54ec",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f929307bd6343b5b613851a733a5957",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6514b0ac93fb4e10823e858205154fb4",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 100,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "916b076092eb4c79b254cd0d611ae078",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46172ec0e8dc43eeb482afe2eb90e69a",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 5
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f554dbf8839e4a8fb9c900bf58376101",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "304243bb5ea3427792e1e6ab3ff31d9f",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d80cc015f6624d9981d7f38be25def22",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d9efd8f5b654faeb1ee4eed37a282d4",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "617d4cb1c29b4586b09eb6d36cf6605a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2973179265cf4d6fa8768670e814e364",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aac7b37217d14ac29a9364da925187d9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cc49fdbc33c420386bedcf033174d6a",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "82494ed3a3a745fc90a232fa1e056ada",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2be5b78a76244a4aa848246299179192",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f9dcbd379254665841f9c45643d307b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "535d70fd01c54e44aa444a80fdf81a95",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b7c4362137c347879498c1c70fa8f49d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "72ce8a51a0864ae388464276316b06d6",
          "Name": "curves",
          "Description": "Curves to group together to create one or more PolyCurves\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8186ebff552b472194597f8711355cdc",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12cc0cc7370740b19d205f8a5fd6659f",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ecb0579a9d34b42b0ad2ea1e0a53cac",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24213ef8f3a948038dabe9c1fb66bf31",
          "Name": "PolyCurve[]..[]",
          "Description": "PolyCurve[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByGroupedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make one or more polycurves by grouping connected curves. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByGroupedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "4ef367ab229e4542b69bd109917c6fc7",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "bc3e23574e2e448199c11d9156ce3878",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0827befdc7a14b648c766aff8ccb889e",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99acaa4f5b454d78a4f67bac3b3aca28",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b2106e061a1e4a20aacf7fa1fa1380db",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f73f18d166e84092bcd2bb98de3fa3a1",
          "Name": "project",
          "Description": "Project",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "923cf0ea50ef4fbdb3d85c3428c7fd66",
          "Name": "reperesentations",
          "Description": "Representation[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3d5af5d9fba46c3894429ebd24723d5",
          "Name": "properties",
          "Description": "Dictionary\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24cf214fe5f1445bb766c240db1e79ea",
          "Name": "Integrate",
          "Description": "Integrate",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.System.Integrate.ByRepresentations@Forma.Project.Project,Forma.Representations.Representation[],DesignScript.Builtin.Dictionary",
      "Replication": "Auto",
      "Description": "Create an Integrate element by a list of Representations\n\nIntegrate.ByRepresentations (project: Project, reperesentations: Representation[], properties: Dictionary = null): Integrate"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "98b4705245cf4503a38bce24850c4213",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "bfb91b8a9c8149be80264df657c07d31",
          "Name": "functionId",
          "Description": "functionId",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7742a229ac840b881152a5e0dd575d9",
          "Name": "",
          "Description": "buildingFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c949f9fab9f74cc38aaf3019afe6ef39",
          "Name": "",
          "Description": "properties",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "buildingFunction = functionId == \"residential\" ? \"#FFEAA5\" :\n\t\tfunctionId == \"commercial\" ? \"#D8DCFF\" :\n\t\t\t\"#999999\";\nproperties =\n{\n\t\"color\": buildingFunction,\n\t\"category\": \"building\"\n};"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b4c23badd6244865a5d475ff4b413174",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "27451948593e4bf38bcb77fcec24376c",
          "Name": "gfaUnits",
          "Description": "GFAUnit[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "734049db97da45739df288f18fe16e71",
          "Name": "GFAUnits",
          "Description": "GFAUnits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Representations.GFAUnits.ByUnits@Forma.Representations.GFAUnit[]",
      "Replication": "Auto",
      "Description": "Create a GFAUnits representation from a list of GFAUnit\n\nGFAUnits.ByUnits (gfaUnits: GFAUnit[]): GFAUnits"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cc6446d93ff84e35b8500e988704fc6d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "631d96b0b5784cc0be1e5fdcffebfd75",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b42f79cf545d41429c6dafe23dd7c5c6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d685806903ff4898844ceedacc3b5c6d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Forma.NodeModels.GetProjectHttp, DynamoForma.NodeModels",
      "Id": "4a546baed75c41a2990197c804d68e5e",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c178549d74af469f9ee57cc0776b27b2",
          "Name": "project",
          "Description": "Forma Project",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get the current Project in the Forma  ",
      "InputValue": "{\"projectId\":\"pro_0xt8n1odg1\",\"region\":\"US\"}"
    },
    {
      "ConcreteType": "Forma.NodeModels.SendElementsToForma, DynamoForma.NodeModels",
      "Id": "4efbc8b7a68247e4a2ec42b696fab30f",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c13a30d7c084454389ae7dadfd1106bd",
          "Name": "elements",
          "Description": "Elements to Send to Forma",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9be1bdc202940e19efb12b8ed3255d7",
          "Name": "output",
          "Description": "Send to Forma Result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Send the given elements To Forma Player Extension"
    }
  ],
  "Connectors": [
    {
      "Start": "a564429ab1b94bb6b4c4c4ea4383ab55",
      "End": "8528c01552c94b4f99ce2092493e4463",
      "Id": "f6b30b6ebdbb465abcc07fecca71b784",
      "IsHidden": "False"
    },
    {
      "Start": "f870dd9d232d4e5b9dddb76fae38dc9b",
      "End": "6da5d7f49070429c95bcd21c82747825",
      "Id": "05f4ac94c6e44995bda2d21cc29d11c2",
      "IsHidden": "False"
    },
    {
      "Start": "1a466c0a23244dfd8325eebeed902f5b",
      "End": "645e17537e35452aa4d68afe927abe90",
      "Id": "f63066344b13401ea35abdb92242e94f",
      "IsHidden": "False"
    },
    {
      "Start": "1a466c0a23244dfd8325eebeed902f5b",
      "End": "0f64104b4eba457fa480d11bbfb41f1d",
      "Id": "e68f01fd26de4209ae910041dad435f2",
      "IsHidden": "False"
    },
    {
      "Start": "1a466c0a23244dfd8325eebeed902f5b",
      "End": "8e14c0580d54497c90fa6a760a3c1bd0",
      "Id": "c16078394d6f43109ee34e9b10fb5f27",
      "IsHidden": "False"
    },
    {
      "Start": "1a466c0a23244dfd8325eebeed902f5b",
      "End": "3599c82011cf4756ad0bcff62588f20b",
      "Id": "9c92101132954f05aabdce53fbe6b33e",
      "IsHidden": "False"
    },
    {
      "Start": "1a466c0a23244dfd8325eebeed902f5b",
      "End": "176a14043447494eb6ebb1e923c509b7",
      "Id": "3902b7482c5a4c6695ee0b5262064213",
      "IsHidden": "False"
    },
    {
      "Start": "6a0be7b8f8c74c4581ad5d88e02fe6ce",
      "End": "784842b0a8e94c4ca63bb06a9ced3934",
      "Id": "1480fc74ed70443e97806a79c5d0b4d6",
      "IsHidden": "False"
    },
    {
      "Start": "c10b4c1ab0b4446a91085868c77a2fdd",
      "End": "84434eee10dc40a28dbf2cc37878c816",
      "Id": "9ac79ee6bc6f4dd6bedcb52a37c4b80f",
      "IsHidden": "False"
    },
    {
      "Start": "c10b4c1ab0b4446a91085868c77a2fdd",
      "End": "8a2f62a6650a471eaaa12573714f94ae",
      "Id": "30c2fa552b494478924e396cdc14ca96",
      "IsHidden": "False"
    },
    {
      "Start": "0047680356604e03acae3c5c5ccca8ec",
      "End": "395158d9c68e4015be424d4b075d1850",
      "Id": "1e4afdd1ecf94e4098c131c02fe40632",
      "IsHidden": "False"
    },
    {
      "Start": "f736f2bee8c84c699bfc2fde11cae7e2",
      "End": "bb313ca27ebb43299921df40b69dbafe",
      "Id": "14608aa7a4c0432fa91333cd508c9eed",
      "IsHidden": "False"
    },
    {
      "Start": "f736f2bee8c84c699bfc2fde11cae7e2",
      "End": "f36413d288ca4c7298160f2d93f0bf84",
      "Id": "813cfb70d8e6403f94f3a31faa2870b1",
      "IsHidden": "False"
    },
    {
      "Start": "a8172c5ff8cc4f5d9456d0892e8491cf",
      "End": "270ece4cb08a41c78a37f01fd19e149b",
      "Id": "4a5add878db9411090a784b9bc3ea22a",
      "IsHidden": "False"
    },
    {
      "Start": "48d4864e97494c88b32aca4424e5a3b2",
      "End": "c9267c080ce34e25863128fce24b2787",
      "Id": "9c8c9295232648509eeaf8d4c518f3b0",
      "IsHidden": "False"
    },
    {
      "Start": "d60c4a01f1444127b31ade69e3fed60b",
      "End": "a5f002d0c8e54eaa8ac3614d6ccb37f4",
      "Id": "5b4b2ff9bf2341bfab1411f4d3d4c19d",
      "IsHidden": "False"
    },
    {
      "Start": "b5ccb00447414f33b2575d8fa488646f",
      "End": "8ab8cd41d8ba415e9a21be43348948c4",
      "Id": "0dc99c72d1584a9c8fbfab648d3dd161",
      "IsHidden": "False"
    },
    {
      "Start": "1aa1d3820f66455b9d406ae175ba4efe",
      "End": "ed5af43ee53d486fb5444d49c9ea5bfa",
      "Id": "3534f07f86934e9b9742aa6cdf24aee2",
      "IsHidden": "False"
    },
    {
      "Start": "e1371bf446914cbfa5faa351f6b7724f",
      "End": "7a23c5273c004fd1a5764ff88757bcfc",
      "Id": "47f3d444ea2d4589811ec47f8efa23fd",
      "IsHidden": "False"
    },
    {
      "Start": "4c4ebbe3dc2d4fc89317d38a05256198",
      "End": "f437d674aa1c4b958bf6d8c31d8ddbae",
      "Id": "b576e9ec61864b5281fd1cb66dcf07c1",
      "IsHidden": "False"
    },
    {
      "Start": "95f42c1b3a4a4d97a465ea002358fed1",
      "End": "5e75bec55a35497c96d17a3ec90a3bbb",
      "Id": "e81690181706483e98703f986c3bd597",
      "IsHidden": "False"
    },
    {
      "Start": "eacdff3daebc451fbbb83fef462db780",
      "End": "fd3af30987cd484580dbaeec6e5e376f",
      "Id": "eb16919b3ca4468a9b994510b6f44231",
      "IsHidden": "False"
    },
    {
      "Start": "6b78b3a09d394dd4bc72a2909d47f81c",
      "End": "8f1d2c1347e74542bf84acd47527cd68",
      "Id": "321508a55c154c27970e61ab5ad1d810",
      "IsHidden": "False"
    },
    {
      "Start": "6fde6604f5ce4986be8d212e081842ae",
      "End": "86eb11221af64055b2599c46c482c8e4",
      "Id": "cebb33e6c2f8417ebe731fca185155ce",
      "IsHidden": "False"
    },
    {
      "Start": "f1e3068876a94a1f812455d037e1609d",
      "End": "821835a8b9aa4362958b225ddda052dc",
      "Id": "bc65d86787304bd9a46b03c6d3074c79",
      "IsHidden": "False"
    },
    {
      "Start": "0518672c340c48e0a0263b15ab163b8f",
      "End": "6eee22b4a215441dbd12637d8e811cf0",
      "Id": "f8a3cca1bc204527a645e5f9cafd1494",
      "IsHidden": "False"
    },
    {
      "Start": "0518672c340c48e0a0263b15ab163b8f",
      "End": "248e6a97082f489abe3354d2be7b8a19",
      "Id": "9e0fcf6939974113af5a4a8eb1fb71e2",
      "IsHidden": "False"
    },
    {
      "Start": "c150d32b412b4d729b75b47e0c906e78",
      "End": "a195d1ec44714c19807110b380743122",
      "Id": "96823977f6304a79a830f6dce4454729",
      "IsHidden": "False"
    },
    {
      "Start": "f9266026023645c3b281cc7828579fa8",
      "End": "7f94e08c28e447688db3b595f9ad8363",
      "Id": "1859774a40e14ba68731fc7e66af2242",
      "IsHidden": "False"
    },
    {
      "Start": "f9266026023645c3b281cc7828579fa8",
      "End": "70398e634e9f4a96a0b6f4c21835232e",
      "Id": "4b607bba5c6844118ae21a3e3dcc2477",
      "IsHidden": "False"
    },
    {
      "Start": "e52001b6127041b68b5e1bda328d1a0f",
      "End": "856229eca4504c85aa82ad399a49bc5b",
      "Id": "7e4ac01712ae4489a1d619476d985dea",
      "IsHidden": "False"
    },
    {
      "Start": "e52001b6127041b68b5e1bda328d1a0f",
      "End": "a699aa6d52b64c6aa4be584c703de0e2",
      "Id": "e297f9be08ab4a68afa5deef0c2f3a65",
      "IsHidden": "False"
    },
    {
      "Start": "5a91842180fd49cc8377034570591a5a",
      "End": "c225fe26f9734c3298d6a340fdfd2544",
      "Id": "7879910ea0114ebf9ac7c01a14df088c",
      "IsHidden": "False"
    },
    {
      "Start": "199f5540b1c74c158edea6fbc33c83d0",
      "End": "d1d47d64ddf34d7084fa40fd13690406",
      "Id": "c10852c2ad3b435e8ebc37eb556f5da0",
      "IsHidden": "False"
    },
    {
      "Start": "dea4377a5eeb45f6b5661c5e74e83b37",
      "End": "2ef445eeceeb4cc9a1fd5eb9822f4753",
      "Id": "720d2c9aadba4190a4a23c8302a5ec0f",
      "IsHidden": "False"
    },
    {
      "Start": "d8f7ca1340ed4a8eb6466b34bb649b56",
      "End": "4a25f4296b8d43ce8d49b08e887664f3",
      "Id": "9e03632f8f5b41fba3a5a5b61ea304f7",
      "IsHidden": "False"
    },
    {
      "Start": "0fc3d144ca8e4bbdb6711a762dd63db8",
      "End": "73f97e97509b4e76ab70f18efa8b7c4a",
      "Id": "1e6a971111dd48e1a70ac447e235ae15",
      "IsHidden": "False"
    },
    {
      "Start": "0fc3d144ca8e4bbdb6711a762dd63db8",
      "End": "efa44e6d41594f7b807eca75717cb0a7",
      "Id": "b5c028f931c04ceb8f9924ec5cb491a0",
      "IsHidden": "False"
    },
    {
      "Start": "b8264ddf445541148b83684f423eed4c",
      "End": "70152bef003547a5a3745367502f2eab",
      "Id": "61be9a15c43a43ec9dad33cbc984ee20",
      "IsHidden": "False"
    },
    {
      "Start": "9b43f6f56c1c44a7bf3474426fc67c4d",
      "End": "d7ea1d1017234303b60bc4318fec0e27",
      "Id": "919230bb144d459083386fe8b3740d97",
      "IsHidden": "False"
    },
    {
      "Start": "9b43f6f56c1c44a7bf3474426fc67c4d",
      "End": "3685d77f10384b5c8c0844f06caaf740",
      "Id": "f07b52b77b7145b88c839e1ac09434cf",
      "IsHidden": "False"
    },
    {
      "Start": "fe667b3727f845378c4df6c7d5da5eb2",
      "End": "6e3c6c0259f04b669ab00b964c87bcdd",
      "Id": "11645561ef024a4cb8f4095f21bcd76a",
      "IsHidden": "False"
    },
    {
      "Start": "fe667b3727f845378c4df6c7d5da5eb2",
      "End": "a5a75c52a6e8492e8abbae85859ad144",
      "Id": "8549add4d0d24e8d8bde0efc5a48b564",
      "IsHidden": "False"
    },
    {
      "Start": "fab3c11ba1f54cefbf7ba1614a032fd0",
      "End": "0f551a2efb2743cb823c0fc5fb88b6f2",
      "Id": "0a0ee828fcee4721bae8d8370a204e35",
      "IsHidden": "False"
    },
    {
      "Start": "43ffa74e4916442a9689c189fcdb1eda",
      "End": "f07f400376c64eb3ab0ed8460a9453ff",
      "Id": "e39488d6327147089fe47c9386bb3922",
      "IsHidden": "False"
    },
    {
      "Start": "b25c59544d2847838533745bc9412995",
      "End": "bd102bc8653747698d6e89297e17b32d",
      "Id": "1026ef68751442a58e72789304f7b894",
      "IsHidden": "False"
    },
    {
      "Start": "d67974fed0cd468f99eba90af27e59b0",
      "End": "82dda90f9d6e42cab4e74f5132a4581a",
      "Id": "bcf6c431f48348fd8107eb6dc4c3fdc8",
      "IsHidden": "False"
    },
    {
      "Start": "d67974fed0cd468f99eba90af27e59b0",
      "End": "72ce8a51a0864ae388464276316b06d6",
      "Id": "35aacfe6741e426e9c1ba535801f1ce4",
      "IsHidden": "False"
    },
    {
      "Start": "d7865c73d4504e5fa600ca8c92602c73",
      "End": "631d96b0b5784cc0be1e5fdcffebfd75",
      "Id": "ca609d92dc3d422d962da41bb4a95095",
      "IsHidden": "False"
    },
    {
      "Start": "14a98754ae734a6e94257c6935e32569",
      "End": "957cf03ab2cc4cb8996f3026021c67ba",
      "Id": "4f115d1086f448c990035c5a1cf6484d",
      "IsHidden": "False"
    },
    {
      "Start": "f6d09c7dba894837926ce48a8f0c45b7",
      "End": "0827befdc7a14b648c766aff8ccb889e",
      "Id": "6d44c2a4ae41408e888cbd092296496f",
      "IsHidden": "False"
    },
    {
      "Start": "fadaa2d39d154ed4ad26379e6db8ffd9",
      "End": "2a5a1f97737744b69caadf07be1301c9",
      "Id": "6853e48bcdfd41f3b2d7390b843914ae",
      "IsHidden": "False"
    },
    {
      "Start": "c2f596461e75467f9a2e585e0188ec40",
      "End": "2973179265cf4d6fa8768670e814e364",
      "Id": "2741c426ede44523958d1032b9444083",
      "IsHidden": "False"
    },
    {
      "Start": "0d8a1b08731941c9ac191194bbb63c16",
      "End": "304243bb5ea3427792e1e6ab3ff31d9f",
      "Id": "36b2af49ab844514b76c90b557a7abea",
      "IsHidden": "False"
    },
    {
      "Start": "288deb98d3fb4f77aebff08e14ec6cea",
      "End": "1c3b868fea804fc5aabbb875e3bc54ec",
      "Id": "0cf533ba85a14ad083e08f881afa3f88",
      "IsHidden": "False"
    },
    {
      "Start": "6514b0ac93fb4e10823e858205154fb4",
      "End": "2be5b78a76244a4aa848246299179192",
      "Id": "5c6697926450418bbb013b73c948321e",
      "IsHidden": "False"
    },
    {
      "Start": "46172ec0e8dc43eeb482afe2eb90e69a",
      "End": "1f929307bd6343b5b613851a733a5957",
      "Id": "69639e27b55d48d183063ee866855c61",
      "IsHidden": "False"
    },
    {
      "Start": "46172ec0e8dc43eeb482afe2eb90e69a",
      "End": "aac7b37217d14ac29a9364da925187d9",
      "Id": "cff06dffa48f4580aee42b7fd95c9bce",
      "IsHidden": "False"
    },
    {
      "Start": "3d9efd8f5b654faeb1ee4eed37a282d4",
      "End": "3f9dcbd379254665841f9c45643d307b",
      "Id": "3819cdf0dda748ad9f2dea224a25df2b",
      "IsHidden": "False"
    },
    {
      "Start": "5cc49fdbc33c420386bedcf033174d6a",
      "End": "d80cc015f6624d9981d7f38be25def22",
      "Id": "331f25feb8b2472d9044c7b529254e48",
      "IsHidden": "False"
    },
    {
      "Start": "535d70fd01c54e44aa444a80fdf81a95",
      "End": "d7ae99e37cc4497cb15f11d24050ce94",
      "Id": "a9bb3707795c418e9c3305c2e4c4e266",
      "IsHidden": "False"
    },
    {
      "Start": "535d70fd01c54e44aa444a80fdf81a95",
      "End": "bfb91b8a9c8149be80264df657c07d31",
      "Id": "a790ce2c4aad4f589fd12e60b9ef18b5",
      "IsHidden": "False"
    },
    {
      "Start": "24213ef8f3a948038dabe9c1fb66bf31",
      "End": "4d89741c553946f4ba64930572d903ac",
      "Id": "ec2e121e09c5490cbee5efc25619f426",
      "IsHidden": "False"
    },
    {
      "Start": "99acaa4f5b454d78a4f67bac3b3aca28",
      "End": "923cf0ea50ef4fbdb3d85c3428c7fd66",
      "Id": "50e83f12606749279bad2368bc76b9ee",
      "IsHidden": "False"
    },
    {
      "Start": "24cf214fe5f1445bb766c240db1e79ea",
      "End": "c13a30d7c084454389ae7dadfd1106bd",
      "Id": "c7e9c40f809843d382e93095ab93f578",
      "IsHidden": "False"
    },
    {
      "Start": "c949f9fab9f74cc38aaf3019afe6ef39",
      "End": "f3d5af5d9fba46c3894429ebd24723d5",
      "Id": "0343da1cc4f64cd0a66df1d9e469d906",
      "IsHidden": "False"
    },
    {
      "Start": "734049db97da45739df288f18fe16e71",
      "End": "bc3e23574e2e448199c11d9156ce3878",
      "Id": "8db95208ac8a4085960f60615924fb97",
      "IsHidden": "False"
    },
    {
      "Start": "d685806903ff4898844ceedacc3b5c6d",
      "End": "27451948593e4bf38bcb77fcec24376c",
      "Id": "54de950b73f7459fa5c7230f741cc9f6",
      "IsHidden": "False"
    },
    {
      "Start": "c178549d74af469f9ee57cc0776b27b2",
      "End": "6bdceecf6979412fb2662d737ed0cf43",
      "Id": "80d923a1747d4b74ad556832e1f35f60",
      "IsHidden": "False"
    },
    {
      "Start": "c178549d74af469f9ee57cc0776b27b2",
      "End": "f73f18d166e84092bcd2bb98de3fa3a1",
      "Id": "62f31ab4f805474a9e6f5939a4b25a44",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "DynamoFormaBeta",
      "Version": "4.0.0.0",
      "ReferenceType": "Package",
      "Nodes": [
        "a850acc5007946d5b5177c08b44915f3",
        "b9ac7605795744958f4f72fd6e3123e2",
        "b2106e061a1e4a20aacf7fa1fa1380db",
        "b4c23badd6244865a5d475ff4b413174",
        "4a546baed75c41a2990197c804d68e5e",
        "4efbc8b7a68247e4a2ec42b696fab30f"
      ]
    }
  ],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": "https://buro-os.com/projects/mahanakhon ",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.19",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.1",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.3.0.6316",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 142.14061737060547,
      "EyeY": 179.61760711669922,
      "EyeZ": 79.84522247314453,
      "LookX": -120.60611724853516,
      "LookY": -131.10443115234375,
      "LookZ": -80.4010009765625,
      "UpX": -0.5581466555595398,
      "UpY": 0.7416360974311829,
      "UpZ": -0.3720862567424774
    },
    "ConnectorPins": [
      {
        "Left": 142.8396477146132,
        "Top": 1303.3560665330815,
        "IsHidden": false,
        "ConnectorGuid": "321508a5-5c15-4c27-970e-61ab5ad1d810"
      },
      {
        "Left": 1799.2167969373932,
        "Top": 1311.5149355050157,
        "IsHidden": false,
        "ConnectorGuid": "321508a5-5c15-4c27-970e-61ab5ad1d810"
      },
      {
        "Left": 1149.2813429261798,
        "Top": 1034.336287505529,
        "IsHidden": false,
        "ConnectorGuid": "9c921011-3295-4f05-aabd-ce53fbe6b33e"
      },
      {
        "Left": 3826.783689892193,
        "Top": 368.12455408782967,
        "IsHidden": false,
        "ConnectorGuid": "1859774a-40e1-4ba6-8731-fc7e66af2242"
      },
      {
        "Left": 8016.045895308204,
        "Top": 1518.5060540414233,
        "IsHidden": false,
        "ConnectorGuid": "cff06dff-a48f-4580-aee4-2b7fd95c9bce"
      },
      {
        "Left": -504.7185570738202,
        "Top": 1574.7203213228095,
        "IsHidden": false,
        "ConnectorGuid": "69639e27-b55d-48d1-8306-3ee866855c61"
      },
      {
        "Left": 8880.33954603004,
        "Top": 1574.7203213228095,
        "IsHidden": false,
        "ConnectorGuid": "69639e27-b55d-48d1-8306-3ee866855c61"
      },
      {
        "Left": -504.7185570738202,
        "Top": 1518.5060540414233,
        "IsHidden": false,
        "ConnectorGuid": "cff06dff-a48f-4580-aee4-2b7fd95c9bce"
      },
      {
        "Left": 5647.652143231967,
        "Top": 1325.2670639668108,
        "IsHidden": false,
        "ConnectorGuid": "e297f9be-08ab-4a68-afa5-deef0c2f3a65"
      },
      {
        "Left": 1830.7816429261798,
        "Top": 1034.336287505529,
        "IsHidden": false,
        "ConnectorGuid": "9c921011-3295-4f05-aabd-ce53fbe6b33e"
      }
    ],
    "NodeViews": [
      {
        "Id": "46f24965b3ba4ceead9b4962fe8e2023",
        "Name": "Cuboid.ByLengths",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1159.2812429261799,
        "Y": 331.8429811356448
      },
      {
        "Id": "c28120dcd5e642b2842132857f794fcd",
        "Name": "CoordinateSystem.ByOrigin",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1159.2812429261799,
        "Y": 844.8980267361937
      },
      {
        "Id": "b420abf45fb249c2865e62d2fe4c4a73",
        "Name": "Setting Tower Dimensions",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -484.71875707382014,
        "Y": 330.408889431268
      },
      {
        "Id": "10297b15fbe543219cd27d858eb31183",
        "Name": "Geometry.Transform",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1537.7812429261799,
        "Y": 331.8429811356448
      },
      {
        "Id": "97827c6de908404092317c4366ed8d27",
        "Name": "CoordinateSystem.Identity",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1159.2812429261799,
        "Y": 591.8429811356448
      },
      {
        "Id": "9959fd7308cc44fa95b9f543c26b0a74",
        "Name": "Setting Curve Dimensions",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 288.0524164874721,
        "Y": 1122.1332669767348
      },
      {
        "Id": "7deae453a9ac4381b2c06ca6842221f4",
        "Name": "Point.ByCoordinates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1153.7022406058686,
        "Y": 1263.1332669767364
      },
      {
        "Id": "49aa0f29bf3f452f90f364aa93e7287e",
        "Name": "NurbsCurve.ByControlPoints",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1552.62784633203,
        "Y": 1263.1332669767364
      },
      {
        "Id": "dfe7304fd54a47c7b70e0dee2d0a66e4",
        "Name": "Geometry.DistanceTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2196.2005104989407,
        "Y": 588.6563133374102
      },
      {
        "Id": "27254c48adff4359addc240aa105752f",
        "Name": "<=",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2830.3039492553853,
        "Y": 588.6563133374102
      },
      {
        "Id": "ed9ba9d22ab14d2ba6333e92821ba78a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2196.2005104989407,
        "Y": 821.543306602128
      },
      {
        "Id": "883472d5f40946b8ad2990a26735dede",
        "Name": "Cubes Removal Factor",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -943.266254771369,
        "Y": 1020.74770391247
      },
      {
        "Id": "c27b64af2e974c4e9d39b144667a6ad3",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3146.79313412572,
        "Y": 331.5533820814344
      },
      {
        "Id": "81150b405c8f431498be5a1c272f42b3",
        "Name": "Cube Module Dimensions",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -943.266254771369,
        "Y": 331.842981135645
      },
      {
        "Id": "97a2b63bdf324f61be812c771c84ce44",
        "Name": "Overall Tower Height",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -943.266254771369,
        "Y": 791.112796320195
      },
      {
        "Id": "419b3ae29bfc4563a0c226fb3326ec88",
        "Name": "Cube Module Spread",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -943.266254771369,
        "Y": 561.47788872792
      },
      {
        "Id": "42ed36b4ba274dadb435cf88eae9624b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3557.4873380306694,
        "Y": 537.3533049714467
      },
      {
        "Id": "48c8ea9790384d69b7393d67d63f9bdb",
        "Name": "Solid.ByUnion",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5145.3760936152385,
        "Y": 346.8982687146331
      },
      {
        "Id": "78b63f2aa02e4dc9b99464e0e27996b1",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4821.3760936152385,
        "Y": 346.8982687146331
      },
      {
        "Id": "58298eb5ac464f7fb1374abd6d88eb29",
        "Name": "BoundingBox.ByGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3836.7835898921926,
        "Y": 537.3533049714467
      },
      {
        "Id": "aab3d665bd7b42f0b46f017a8be831e1",
        "Name": "BoundingBox.MinPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4190.079841753715,
        "Y": 537.3533049714467
      },
      {
        "Id": "b1b8c5916e5f4d0da763ff79948f7507",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4519.3760936152385,
        "Y": 537.3533049714467
      },
      {
        "Id": "01554d8115d4442db80acc9fb1fc4065",
        "Name": "Geometry.Explode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5657.652043231967,
        "Y": 346.8982687146331
      },
      {
        "Id": "33247cb7e2cb4898b6a51c0462335908",
        "Name": "Surface.PointAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6020.487142160599,
        "Y": 537.3533049714467
      },
      {
        "Id": "f5dfc840c4714b8598464ca4ae356600",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5755.652043231967,
        "Y": 692.6856035125072
      },
      {
        "Id": "eb06e4762fa34afbb22dcfda8d767cf1",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6398.322241089232,
        "Y": 537.3533049714467
      },
      {
        "Id": "756babd85cbe43288112ff34c6b0fe49",
        "Name": "List.MinimumItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6715.232605630137,
        "Y": 698.8476195402498
      },
      {
        "Id": "0632dcfabdc24cc1ade5b203936d7c99",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7030.992438946498,
        "Y": 537.3533049714467
      },
      {
        "Id": "4aeec1f92bac48d19e4643a777c9be4c",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7305.8275378751305,
        "Y": 341.46608240425803
      },
      {
        "Id": "ed0ab9e63834430db66fb8971dae9e4d",
        "Name": "Surface.PerimeterCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7651.662636803763,
        "Y": 341.46608240425803
      },
      {
        "Id": "a850acc5007946d5b5177c08b44915f3",
        "Name": "GFAUnits.ByCurveAndElevation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9916.113276843123,
        "Y": 341.46608240425803
      },
      {
        "Id": "ecbf2d4abaf946998d33ae8cf35d6e7c",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9629.660892450585,
        "Y": 537.3533049714467
      },
      {
        "Id": "b9ac7605795744958f4f72fd6e3123e2",
        "Name": "VolumeMesh.ByMeshOrSolid",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10647.433042790453,
        "Y": 1109.761121192016
      },
      {
        "Id": "4767c6cf7953443bafe0a61c5ae5fb75",
        "Name": "Solid.ByUnion",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10349.466573604768,
        "Y": 1315.766663966811
      },
      {
        "Id": "539cae31378a4b70b7d85aafb1318680",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8026.045795308204,
        "Y": 537.3533049714467
      },
      {
        "Id": "3aad941fcfdf453aa0de97f063091c07",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9001.385726202792,
        "Y": 895.762002042673
      },
      {
        "Id": "0cc0df3d005a4186bf99d021a29ffc19",
        "Name": "List.OfRepeatedItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9289.96506429782,
        "Y": 1109.761121192016
      },
      {
        "Id": "916b076092eb4c79b254cd0d611ae078",
        "Name": "Commercial levels count",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -941.7321269012509,
        "Y": 1193.4970747558868
      },
      {
        "Id": "f554dbf8839e4a8fb9c900bf58376101",
        "Name": "List.OfRepeatedItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9296.199416387091,
        "Y": 661.7628828933301
      },
      {
        "Id": "617d4cb1c29b4586b09eb6d36cf6605a",
        "Name": "-",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8298.562673246,
        "Y": 661.7628828933301
      },
      {
        "Id": "82494ed3a3a745fc90a232fa1e056ada",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9627.097346690061,
        "Y": 895.762002042673
      },
      {
        "Id": "b7c4362137c347879498c1c70fa8f49d",
        "Name": "PolyCurve.ByGroupedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8307.57960062071,
        "Y": 341.46608240425803
      },
      {
        "Id": "4ef367ab229e4542b69bd109917c6fc7",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 11035.173167128054,
        "Y": 341.46608240425803
      },
      {
        "Id": "b2106e061a1e4a20aacf7fa1fa1380db",
        "Name": "Integrate.ByRepresentations",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 11326.443870351017,
        "Y": 661.7628828933301
      },
      {
        "Id": "98b4705245cf4503a38bce24850c4213",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10375.173167128054,
        "Y": 661.7628828933301
      },
      {
        "Id": "b4c23badd6244865a5d475ff4b413174",
        "Name": "GFAUnits.ByUnits",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10673.81987036641,
        "Y": 341.46608240425803
      },
      {
        "Id": "cc6446d93ff84e35b8500e988704fc6d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10349.466573604768,
        "Y": 341.46608240425803
      },
      {
        "Id": "4a546baed75c41a2990197c804d68e5e",
        "Name": "GetProject",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10349.466573604768,
        "Y": 1008.2647734300706
      },
      {
        "Id": "4efbc8b7a68247e4a2ec42b696fab30f",
        "Name": "SendElementsToForma",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 11977.197891505075,
        "Y": 661.7628828933301
      }
    ],
    "Annotations": [
      {
        "Id": "80ef02423ab347009435a8d9a9414b17",
        "Title": "Inputs",
        "DescriptionText": " How we control our overall Tower dimensions. These have all been set as \"isInput\" on the nodal right-click context menu to ensure they show up in the Dynamo Player in Forma.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "883472d5f40946b8ad2990a26735dede",
          "81150b405c8f431498be5a1c272f42b3",
          "97a2b63bdf324f61be812c771c84ce44",
          "419b3ae29bfc4563a0c226fb3326ec88",
          "916b076092eb4c79b254cd0d611ae078",
          "b22c8ac923164998b9352da68d106762",
          "a5989966d5014bb08d5f38d96e026eb7",
          "442362bb64494653af3baf2feb435736",
          "0b2a67b16d9a4aa18dfbaf014f204437"
        ],
        "HasNestedGroups": false,
        "Left": -953.266254771369,
        "Top": 162.842981135645,
        "Width": 369.534127870118,
        "Height": 1174.6540936202418,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 273.842981135645,
        "InitialHeight": 1064.6540936202418,
        "TextblockHeight": 101.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "de72f7cf7e3c452b8e0ad4272be22515",
        "Title": "Define overall Tower Dimensions",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b420abf45fb249c2865e62d2fe4c4a73"
        ],
        "HasNestedGroups": false,
        "Left": -494.71875707382014,
        "Top": 257.408889431268,
        "Width": 680.0,
        "Height": 374.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 330.408889431268,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "47a1c934df184704a3223c18f45f2ffd",
        "Title": "Define NurbsCurve point locations",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9959fd7308cc44fa95b9f543c26b0a74"
        ],
        "HasNestedGroups": false,
        "Left": 278.0524164874721,
        "Top": 1049.1332669767348,
        "Width": 711.0,
        "Height": 423.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 1122.1332669767348,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "0d70ee35970c4280aa774875149c4f6c",
        "Title": "Create Cuboid Tower (Solid)",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "46f24965b3ba4ceead9b4962fe8e2023",
          "c28120dcd5e642b2842132857f794fcd",
          "10297b15fbe543219cd27d858eb31183",
          "97827c6de908404092317c4366ed8d27",
          "066b1a0fce37412eb59bac85ae26d9ab",
          "b0768dfe4076421fa2ac44d30791db41",
          "d1bc0c27768f407a80a95225a7ca6919"
        ],
        "HasNestedGroups": false,
        "Left": 1142.7812429261799,
        "Top": 185.84298113564478,
        "Width": 738.0,
        "Height": 868.055045600549,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 258.8429811356448,
        "InitialHeight": 731.055045600549,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c03dc733d96946278b6837a60b5b487e",
        "Title": "Create NurbsCurve for distance checking",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7deae453a9ac4381b2c06ca6842221f4",
          "49aa0f29bf3f452f90f364aa93e7287e",
          "acdd3ecbea9f417c83a411fe685cc7a1",
          "ddbd071ad20146fab353b3f19a6248eb"
        ],
        "HasNestedGroups": false,
        "Left": 1143.7022406058686,
        "Top": 1117.1332669767364,
        "Width": 706.4256057261614,
        "Height": 355.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 1190.1332669767364,
        "InitialHeight": 218.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "3768f95caeeb4bf8b81a4a2e66eafab9",
        "Title": "Removing Cuboids based on proxmity to NurbsCurve",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dfe7304fd54a47c7b70e0dee2d0a66e4",
          "27254c48adff4359addc240aa105752f",
          "ed9ba9d22ab14d2ba6333e92821ba78a",
          "c27b64af2e974c4e9d39b144667a6ad3",
          "1c4727aa4be74047b3ff9d3a92b80b2b",
          "73320b5676fa43ce8ab5da1a64e15cb3",
          "7a2ec03877ba4c5984f403e2ea6f6f3b"
        ],
        "HasNestedGroups": false,
        "Left": 2153.2005104989407,
        "Top": 200.5533820814344,
        "Width": 1238.5926236267792,
        "Height": 794.9899245206936,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 273.5533820814344,
        "InitialHeight": 692.9899245206936,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "4a814691609c4872854b446a657d95da",
        "Title": "Create a single Solid",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "42ed36b4ba274dadb435cf88eae9624b",
          "48c8ea9790384d69b7393d67d63f9bdb",
          "b1b8c5916e5f4d0da763ff79948f7507",
          "aab3d665bd7b42f0b46f017a8be831e1",
          "78b63f2aa02e4dc9b99464e0e27996b1",
          "58298eb5ac464f7fb1374abd6d88eb29",
          "baa489c404104126aa3e419492faf14a",
          "9c470fdeca3843bc96126f3d8b55b79f",
          "8844f9455da24c4e8c16799bc281a9ae",
          "7b20e8cfc3d44b8cade099183220d5d0"
        ],
        "HasNestedGroups": false,
        "Left": 3547.4873380306694,
        "Top": 200.8982687146331,
        "Width": 1805.388755584569,
        "Height": 510.4550362568136,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 273.8982687146331,
        "InitialHeight": 408.4550362568136,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "31340421511d4925b2f2cc6ce334b19f",
        "Title": "Create Perimeter Curves",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "01554d8115d4442db80acc9fb1fc4065",
          "33247cb7e2cb4898b6a51c0462335908",
          "f5dfc840c4714b8598464ca4ae356600",
          "eb06e4762fa34afbb22dcfda8d767cf1",
          "756babd85cbe43288112ff34c6b0fe49",
          "0632dcfabdc24cc1ade5b203936d7c99",
          "4aeec1f92bac48d19e4643a777c9be4c",
          "ed0ab9e63834430db66fb8971dae9e4d",
          "539cae31378a4b70b7d85aafb1318680",
          "b7c4362137c347879498c1c70fa8f49d",
          "617d4cb1c29b4586b09eb6d36cf6605a",
          "db1154a582554251800fc26477e34c7d",
          "17568b430d9a4829958e226b558b976f",
          "6be15fa721e74beeaf0b21181860782b",
          "de86587111354c74ac89f5d5b3cd47ff"
        ],
        "HasNestedGroups": false,
        "Left": 5623.652043231967,
        "Top": 195.46608240425803,
        "Width": 2984.4275573887426,
        "Height": 647.3815371359917,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 268.46608240425803,
        "InitialHeight": 575.3815371359917,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "242b7ba8e54c4192a8a7f5cf01755508",
        "Title": "Send to Forma",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4efbc8b7a68247e4a2ec42b696fab30f"
        ],
        "HasNestedGroups": false,
        "Left": 11967.197891505075,
        "Top": 588.7628828933301,
        "Width": 264.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 661.7628828933301,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "39fb560eb0ba46fdab8fc46f7558cb01",
        "Title": "Create GFA Units and Representation",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a850acc5007946d5b5177c08b44915f3",
          "ecbf2d4abaf946998d33ae8cf35d6e7c",
          "b9ac7605795744958f4f72fd6e3123e2",
          "4767c6cf7953443bafe0a61c5ae5fb75",
          "3aad941fcfdf453aa0de97f063091c07",
          "0cc0df3d005a4186bf99d021a29ffc19",
          "f554dbf8839e4a8fb9c900bf58376101",
          "82494ed3a3a745fc90a232fa1e056ada",
          "4ef367ab229e4542b69bd109917c6fc7",
          "98b4705245cf4503a38bce24850c4213",
          "b4c23badd6244865a5d475ff4b413174",
          "cc6446d93ff84e35b8500e988704fc6d",
          "b2106e061a1e4a20aacf7fa1fa1380db",
          "4a546baed75c41a2990197c804d68e5e",
          "00189de182a14a268a2fe9f19282e37c",
          "874bbb5f4e6842e0bfddb1b9284f70f4",
          "3c1acb4e8f1a44f9be7c4978228f6ca1",
          "6ac33efb4085467e81a1e435280d1547",
          "2f09dc9c1fad4073bc3a329f3cfd6e19"
        ],
        "HasNestedGroups": false,
        "Left": 8991.385726202792,
        "Top": 195.46608240425803,
        "Width": 2636.0581441482245,
        "Height": 1252.300581562553,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 268.46608240425803,
        "InitialHeight": 1192.300581562553,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "b22c8ac923164998b9352da68d106762",
        "Title": "Set overall dimensions of Cube modules",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -887.266254771369,
        "Top": 281.842981135645,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "81150b405c8f431498be5a1c272f42b3"
      },
      {
        "Id": "a5989966d5014bb08d5f38d96e026eb7",
        "Title": "Set overall Tower Height",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -845.766254771369,
        "Top": 741.112796320195,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "97a2b63bdf324f61be812c771c84ce44"
      },
      {
        "Id": "442362bb64494653af3baf2feb435736",
        "Title": "Choose distance factor to remove Cubes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -888.266254771369,
        "Top": 970.7477039124701,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "883472d5f40946b8ad2990a26735dede"
      },
      {
        "Id": "acdd3ecbea9f417c83a411fe685cc7a1",
        "Title": "Create points from location data",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1168.7022406058686,
        "Top": 1213.1332669767364,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "7deae453a9ac4381b2c06ca6842221f4"
      },
      {
        "Id": "ddbd071ad20146fab353b3f19a6248eb",
        "Title": "Generate NurbsCurve from our control points that wraps around the building as a spiral",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1551.12784633203,
        "Top": 1198.1332669767364,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "49aa0f29bf3f452f90f364aa93e7287e"
      },
      {
        "Id": "066b1a0fce37412eb59bac85ae26d9ab",
        "Title": "Create a single cuboid, then translate it around (More performant than genreating new ones)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1160.2812429261799,
        "Top": 266.8429811356448,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "46f24965b3ba4ceead9b4962fe8e2023"
      },
      {
        "Id": "b0768dfe4076421fa2ac44d30791db41",
        "Title": "Transforming Cubes generates an overall pixelated tower",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1558.7812429261799,
        "Top": 266.8429811356448,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "10297b15fbe543219cd27d858eb31183"
      },
      {
        "Id": "d1bc0c27768f407a80a95225a7ca6919",
        "Title": "Generating a three-dimensional CoordinateSystem grid",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1152.7812429261799,
        "Top": 779.8980267361937,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "c28120dcd5e642b2842132857f794fcd"
      },
      {
        "Id": "1c4727aa4be74047b3ff9d3a92b80b2b",
        "Title": "Query the distance of each Cube to our NurbsCurve in order to remove Cubes within a set distance",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2163.2005104989407,
        "Top": 523.6563133374102,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "dfe7304fd54a47c7b70e0dee2d0a66e4"
      },
      {
        "Id": "73320b5676fa43ce8ab5da1a64e15cb3",
        "Title": "Creatte Boolean Mask based on our Cube removal factor",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2767.3039492553853,
        "Top": 523.6563133374102,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "27254c48adff4359addc240aa105752f"
      },
      {
        "Id": "7a2ec03877ba4c5984f403e2ea6f6f3b",
        "Title": "Split Cubes into Remain and Remove",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3154.79313412572,
        "Top": 281.5533820814344,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "c27b64af2e974c4e9d39b144667a6ad3"
      },
      {
        "Id": "0b2a67b16d9a4aa18dfbaf014f204437",
        "Title": "Set overall spread of our Cube modules",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -885.766254771369,
        "Top": 511.47788872792,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "419b3ae29bfc4563a0c226fb3326ec88"
      },
      {
        "Id": "9c470fdeca3843bc96126f3d8b55b79f",
        "Title": "Union together all Cubes by level",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5143.8760936152385,
        "Top": 296.8982687146331,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "48c8ea9790384d69b7393d67d63f9bdb"
      },
      {
        "Id": "baa489c404104126aa3e419492faf14a",
        "Title": "Group all Cubes vertically by their Bounding Box minimum Z point. ",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4793.8760936152385,
        "Top": 281.8982687146331,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "78b63f2aa02e4dc9b99464e0e27996b1"
      },
      {
        "Id": "db1154a582554251800fc26477e34c7d",
        "Title": "Explode unioned Cubes to expose floor plate Surface",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5633.652043231967,
        "Top": 281.8982687146331,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "01554d8115d4442db80acc9fb1fc4065"
      },
      {
        "Id": "17568b430d9a4829958e226b558b976f",
        "Title": "Collect only the bottom surface (Floor plate) by the Z-value of a point at the middle of each surface",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 7276.3275378751305,
        "Top": 276.46608240425803,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "4aeec1f92bac48d19e4643a777c9be4c"
      },
      {
        "Id": "6be15fa721e74beeaf0b21181860782b",
        "Title": "Get the Floor plate at each level",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 7684.662636803763,
        "Top": 291.46608240425803,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "ed0ab9e63834430db66fb8971dae9e4d"
      },
      {
        "Id": "de86587111354c74ac89f5d5b3cd47ff",
        "Title": "Generate a singular PolyCurve from the Floor Plate boundary",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 8307.07960062071,
        "Top": 276.46608240425803,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b7c4362137c347879498c1c70fa8f49d"
      },
      {
        "Id": "00189de182a14a268a2fe9f19282e37c",
        "Title": "Generate GFA Units from the floor plates",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 9949.613276843123,
        "Top": 291.46608240425803,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "a850acc5007946d5b5177c08b44915f3"
      },
      {
        "Id": "874bbb5f4e6842e0bfddb1b9284f70f4",
        "Title": "Create GFAUnits, needed for the Representation to be created correctly",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 10644.81987036641,
        "Top": 276.46608240425803,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b4c23badd6244865a5d475ff4b413174"
      },
      {
        "Id": "3c1acb4e8f1a44f9be7c4978228f6ca1",
        "Title": "Choose color based on function ID and defining the Category in our Properties",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 10543.673167128054,
        "Top": 596.7628828933301,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "98b4705245cf4503a38bce24850c4213"
      },
      {
        "Id": "6ac33efb4085467e81a1e435280d1547",
        "Title": "Create a Volume Mesh of the overall Tower solid to add into our Representation to send to Forma",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 10645.433042790453,
        "Top": 1044.761121192016,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b9ac7605795744958f4f72fd6e3123e2"
      },
      {
        "Id": "2f09dc9c1fad4073bc3a329f3cfd6e19",
        "Title": "Creating a Representation in Forma of the Building by setting Volume Mesh, GFA Units and Properties",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 11325.443870351017,
        "Top": 596.7628828933301,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b2106e061a1e4a20aacf7fa1fa1380db"
      },
      {
        "Id": "8844f9455da24c4e8c16799bc281a9ae",
        "Title": "Collecting a single point per Cube, located at the lowest point and pulling it's vertical Z-value.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4479.3760936152385,
        "Top": 472.35330497144673,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b1b8c5916e5f4d0da763ff79948f7507"
      }
    ],
    "X": 403.42152340332586,
    "Y": 619.1979982950443,
    "Zoom": 0.10040582497511141
  }
}
